name: Build and Test

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

env:
  default-php-version: "8.1"
  coverage-with: "sqlite"

jobs:
  #############
  # Run tests
  #############
  tests:
    runs-on: ubuntu-latest
    name: Testsuite ${{ matrix.testsuite }} with PHP ${{ matrix.php-version }} + ${{ matrix.connection }}

    services:
      pgsql:
        image: postgres:14.8
        env:
          POSTGRES_DB: officelife
          POSTGRES_USER: officelife
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: --name=postgres --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.2"]
        connection: [sqlite, mysql, pgsql]
        testsuite: [Unit]
        coverage: [true] # run test with coverage, if 'coverage-with' match with the connection
        include:
          - connection: sqlite
            testsuite: Integration
            php-version: "8.2"
            coverage: false

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, dom, fileinfo, ${{ matrix.connection }}
          coverage: none
      - name: Check PHP Version
        run: php -v
      - name: Check Composer Version
        run: composer -V
      - name: Check PHP Extensions
        run: php -m

      # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache composer files
        uses: actions/cache/restore@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-${{ matrix.php-version }}
            ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader

      # Prepare
      - name: Prepare environment
        run: |
          cp tests/.env.ci-${{ matrix.connection }} .env
          touch config/.version config/.release
          mkdir -p public/js public/css
          {\
            echo "{"; \
            for f in app.js app.css; do \
              [[ $first == 1 ]] && echo -n "," || first=1; \
              k=${f##*.}/$f; \
              echo "\"/$k\": \"/$k\""; \
              echo '' > public/$k; \
            done; \
            echo "}"; \
          } | tee public/mix-manifest.json
      - name: Create sqlite database
        if: matrix.connection == 'sqlite'
        run: touch database/database.sqlite
      - name: Create mysql database
        if: matrix.connection == 'mysql'
        run: |
          sudo systemctl start mysql.service
          mysql --protocol=tcp -u root -proot -e "CREATE DATABASE IF NOT EXISTS officelife CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
      - name: Generate key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --no-interaction -vvv
      - name: Run seeds
        run: php artisan db:seed --no-interaction -vvv

      # Test
      - name: Run tests without coverage
        run: vendor/bin/phpunit -c phpunit.xml --testsuite ${{ matrix.testsuite }} --log-junit ./results/${{ matrix.connection }}/junit/results${{ matrix.testsuite }}.xml
        env:
          DB_CONNECTION: ${{ matrix.connection }}

      - name: Fix results files
        run: sed -i -e "s%$GITHUB_WORKSPACE/%%g" **/*.xml
        working-directory: results/${{ matrix.connection }}

      - name: Store results
        if: matrix.php-version == env.default-php-version
        uses: actions/upload-artifact@v3
        with:
          name: results
          path: results
